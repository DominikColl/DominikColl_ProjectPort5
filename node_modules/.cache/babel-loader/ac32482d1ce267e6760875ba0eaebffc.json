{"ast":null,"code":"var _jsxFileName = \"/Users/dominikcoll/Desktop/DominikColl_ProjectPort5/src/Page/Home.js\";\nimport React, { Component } from 'react';\nimport Form from '../Components/form';\nimport AlbumItem from '../Components/albumItem';\nimport SongItem from '../Components/songItem';\nimport ArtistItem from '../Components/artistItem';\nimport TopCharts from '../Components/topChartsItem';\nimport Header from '../Components/header';\nimport { NavLink } from 'react-router-dom';\nimport '../Components/style.css';\nimport { artistClickk } from '../Page/Code'; //project built using livefm api and spotify/youtube playback\n// Reacticons used and css Reset came from http://meyerweb.com/eric/tools/css/reset/ \n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: '',\n      name: 'name',\n      other: 'other',\n      filter: '',\n      collection: [],\n      topTracks: [],\n      current: []\n    };\n\n    this.click = () => {\n      this.fetchTopTracks();\n      console.log(this.state.filter);\n      let search = document.querySelector('input').value;\n      this.setState({\n        search\n      });\n\n      if (this.state.filter === 'albumButton') {\n        this.fetchAlbum(search);\n      } else if (this.state.filter === 'artistButton') {\n        this.fetchArtist(search);\n      } else if (this.state.filter === 'songButton') {\n        this.fetchSong(search);\n      }\n    };\n\n    this.btnClick = e => {\n      let filter = e.target.id;\n      this.setState({\n        filter\n      });\n      console.log(filter);\n    };\n\n    this.artistClick = e => {\n      console.log(e.target.id); //artistClickk();\n    };\n\n    this.homeClick = () => {\n      let collection = [];\n      document.querySelector('input').value = '';\n      this.setState({\n        collection\n      });\n    };\n  }\n\n  //happens when all compents load in\n  componentDidMount() {\n    // this.fetchTopTracks();\n    console.log('test f');\n  } //fetchs album based of search value\n\n\n  async fetchAlbum(value) {\n    let collection = [];\n    console.log(value);\n    const res = await fetch(\"http://ws.audioscrobbler.com/2.0/?method=album.search&album=\".concat(value, \"&api_key=77730a79e57e200de8fac0acd06a6bb6&format=json\"));\n    const data = await res.json(); //if data results exist\n\n    if (data.results) {\n      //this is gonna be a problem\n      for (let i = 0; i < 9; i++) {\n        collection.push(data.results.albummatches.album[i]);\n      } //collection=data.results.albummatches.album;\n\n\n      console.log(collection);\n      this.setState({\n        collection\n      });\n      console.log('exist');\n      console.log(data.results.albummatches.album[0]);\n      return collection;\n    }\n  } //fetchs song based of search value\n\n\n  async fetchSong(value) {\n    let collection = [];\n    const res = await fetch(\"http://ws.audioscrobbler.com/2.0/?method=track.search&track=\".concat(value, \"&api_key=77730a79e57e200de8fac0acd06a6bb6&format=json\"));\n    const data = await res.json();\n    console.log(data);\n\n    if (data.results) {\n      for (let i = 0; i < 20; i++) {\n        collection.push(data.results.trackmatches.track[i]);\n      }\n\n      console.log(collection);\n      this.setState({\n        collection\n      });\n      console.log('exist');\n      console.log(data.results.trackmatches.track[0]);\n      let name = data.results.trackmatches.track[0].name;\n      let other = 'Listeners: ' + data.results.trackmatches.track[0].listeners;\n      this.setState({\n        name\n      });\n      this.setState({\n        other\n      });\n    }\n  } //fetchs artist based on search value\n\n\n  async fetchArtist(value) {\n    let collection = [];\n    const res = await fetch(\"http://ws.audioscrobbler.com/2.0/?method=artist.search&artist=\".concat(value, \"&api_key=77730a79e57e200de8fac0acd06a6bb6&format=json\"));\n    const data = await res.json();\n    console.log(data);\n\n    if (data.results) {\n      for (let i = 0; i < 9; i++) {\n        collection.push(data.results.artistmatches.artist[i]);\n      }\n\n      console.log(collection);\n      this.setState({\n        collection\n      });\n      console.log('exist');\n      console.log(data.results.artistmatches.artist[0]);\n      let name = data.results.artistmatches.artist[0].name;\n      let other = 'Listeners: ' + data.results.artistmatches.artist[0].listeners;\n      this.setState({\n        name\n      });\n      this.setState({\n        other\n      });\n    }\n  } //fetchs most popular artist\n\n\n  async fetchTopArtist() {\n    const res = await fetch(\"http://ws.audioscrobbler.com/2.0/?method=chart.gettopartists&api_key=77730a79e57e200de8fac0acd06a6bb6&format=json\");\n    const data = await res.json();\n    console.log(data);\n  } //fetchs most popular tracks\n\n\n  async fetchTopTracks() {\n    let topTracks = [];\n    const res = await fetch(\"http://ws.audioscrobbler.com/2.0/?method=chart.gettoptracks&api_key=77730a79e57e200de8fac0acd06a6bb6&format=json\");\n    const data = await res.json(); // console.log(data);\n\n    for (let i = 0; i < 9; i++) {\n      topTracks.push(data.tracks.track[i]);\n    }\n\n    console.log('from top charts collection'); //  console.log(collection)\n    //  this.setState({topTracks});\n    // return collection;\n  } //click function that will happen when form is submitted\n  //checks filter if fetching song artist or album the triggers fucntion to fetch data\n\n\n  //<NavLink onClick={this.itemClick} to='/MoreInfo'><AlbumItem img={e.image[2]['#text']} albumName={e.name} artist={e.artist} url={e.url}/></NavLink>\n  render() {\n    //filling content based off what the filter is getting data from collection in state set when fetching data \n    let fillContent = this.state.collection.map((e, i) => {\n      if (this.state.filter === 'artistButton') {\n        return React.createElement(\"li\", {\n          id: i,\n          to: \"/MoreInfo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(ArtistItem, {\n          id: i,\n          click: this.artistClick,\n          img: e.image[2]['#text'],\n          name: e.name,\n          followers: e.listeners,\n          url: e.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }));\n      } else if (this.state.filter === 'albumButton') {\n        return React.createElement(\"li\", {\n          id: \"albumId\",\n          onClick: e => this.artistClick(e),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(AlbumItem, {\n          img: e.image[2]['#text'],\n          albumName: e.name,\n          artist: e.artist,\n          url: e.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }));\n      } else if (this.state.filter === 'songButton') {\n        return React.createElement(\"li\", {\n          onClick: this.trackClick,\n          to: \"/MoreInfo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(SongItem, {\n          img: e.image[2]['#text'],\n          songName: e.name,\n          artistName: e.artist,\n          plays: e.listeners,\n          url: e.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }));\n      }\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Header, {\n      click: this.homeClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(Form, {\n      btnClick: this.btnClick,\n      click: this.click,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      id: \"listCon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, fillContent));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/dominikcoll/Desktop/DominikColl_ProjectPort5/src/Page/Home.js"],"names":["React","Component","Form","AlbumItem","SongItem","ArtistItem","TopCharts","Header","NavLink","artistClickk","Home","state","search","name","other","filter","collection","topTracks","current","click","fetchTopTracks","console","log","document","querySelector","value","setState","fetchAlbum","fetchArtist","fetchSong","btnClick","e","target","id","artistClick","homeClick","componentDidMount","res","fetch","data","json","results","i","push","albummatches","album","trackmatches","track","listeners","artistmatches","artist","fetchTopArtist","tracks","render","fillContent","map","image","url","trackClick"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Form from '../Components/form';\nimport AlbumItem from '../Components/albumItem';\nimport SongItem from '../Components/songItem';\nimport ArtistItem from '../Components/artistItem';\nimport TopCharts from '../Components/topChartsItem';\nimport Header from '../Components/header';\nimport {NavLink} from 'react-router-dom';\nimport '../Components/style.css';\nimport {artistClickk} from '../Page/Code';\n\n//project built using livefm api and spotify/youtube playback\n// Reacticons used and css Reset came from http://meyerweb.com/eric/tools/css/reset/ \nclass Home extends Component {\n  //state \n    state = { search:'',name:'name',other:'other',filter:'',collection:[],topTracks:[],current:[] }\n    //happens when all compents load in\n    componentDidMount() {\n      // this.fetchTopTracks();\n     console.log('test f');\n    }\n    \n    //fetchs album based of search value\n    async fetchAlbum(value){\n        let collection=[];\n        console.log(value);\n        const res=await fetch(`http://ws.audioscrobbler.com/2.0/?method=album.search&album=${value}&api_key=77730a79e57e200de8fac0acd06a6bb6&format=json`)\n        const data=await res.json()\n        //if data results exist\n        if(data.results){\n          //this is gonna be a problem\n          for(let i=0;i<9;i++){\n             collection.push(data.results.albummatches.album[i]);\n           }\n          //collection=data.results.albummatches.album;\n           console.log(collection);\n           this.setState({collection});\n          console.log('exist');\n          console.log(data.results.albummatches.album[0]);\n          return collection;\n          \n        }\n      }\n      //fetchs song based of search value\n      async fetchSong(value){\n        let collection=[];\n        const res=await fetch(`http://ws.audioscrobbler.com/2.0/?method=track.search&track=${value}&api_key=77730a79e57e200de8fac0acd06a6bb6&format=json`)\n        const data=await res.json()\n        console.log(data);\n        if(data.results){\n          for(let i=0;i<20;i++){\n             collection.push(data.results.trackmatches.track[i]);\n           }\n           console.log(collection);\n           this.setState({collection});\n          console.log('exist');\n          console.log(data.results.trackmatches.track[0]);\n          let name=data.results.trackmatches.track[0].name;\n          let other='Listeners: '+data.results.trackmatches.track[0].listeners;\n          this.setState({name});\n          this.setState({other});\n        }\n      }\n      //fetchs artist based on search value\n      async fetchArtist(value){\n        let collection=[];\n        const res=await fetch(`http://ws.audioscrobbler.com/2.0/?method=artist.search&artist=${value}&api_key=77730a79e57e200de8fac0acd06a6bb6&format=json`)\n        const data=await res.json()\n        console.log(data);\n        if(data.results){\n          for(let i=0;i<9;i++){\n             collection.push(data.results.artistmatches.artist[i]);\n           }\n           console.log(collection);\n           this.setState({collection});\n          console.log('exist');\n          console.log(data.results.artistmatches.artist[0]);\n          let name=data.results.artistmatches.artist[0].name;\n          let other='Listeners: '+data.results.artistmatches.artist[0].listeners;\n          this.setState({name});\n          this.setState({other});\n        }\n      }\n      //fetchs most popular artist\n      async fetchTopArtist(){\n        const res=await fetch(`http://ws.audioscrobbler.com/2.0/?method=chart.gettopartists&api_key=77730a79e57e200de8fac0acd06a6bb6&format=json`)\n        const data=await res.json()\n        console.log(data);\n      }\n      //fetchs most popular tracks\n      async fetchTopTracks(){\n        let topTracks=[];\n       const res=await fetch(`http://ws.audioscrobbler.com/2.0/?method=chart.gettoptracks&api_key=77730a79e57e200de8fac0acd06a6bb6&format=json`)\n       const data=await res.json()\n      // console.log(data);\n       for(let i=0;i<9;i++){\n         topTracks.push(data.tracks.track[i]);\n       }\n       console.log('from top charts collection');\n     //  console.log(collection)\n     //  this.setState({topTracks});\n      // return collection;\n     }\n\n      //click function that will happen when form is submitted\n      //checks filter if fetching song artist or album the triggers fucntion to fetch data\n      click=()=>{\n         this.fetchTopTracks();\n          console.log(this.state.filter);\n            let search=document.querySelector('input').value;\n            this.setState({search});\n            if(this.state.filter==='albumButton'){\n              this.fetchAlbum(search);\n            }else if(this.state.filter==='artistButton'){\n              this.fetchArtist(search);\n            }else if(this.state.filter==='songButton'){\n              this.fetchSong(search);\n            }\n     }\n     //happens when filter button is clicked will be set using id of button clicked\n     btnClick=(e)=>{\n       let filter=e.target.id;\n       this.setState({filter});\n       console.log(filter); \n     }\n     //I CANT GET VALUE INSIDE OF LI OR ANYTHING NEEDED FROM TARGETING A COMPENTNT\n     artistClick=(e)=>{\n       console.log(e.target.id);\n       \n      //artistClickk();\n     }\n\n    //  returns home and clears input fields\n     homeClick=()=>{\n       let collection=[];\n       document.querySelector('input').value='';\n       this.setState({collection});\n     }\n     //<NavLink onClick={this.itemClick} to='/MoreInfo'><AlbumItem img={e.image[2]['#text']} albumName={e.name} artist={e.artist} url={e.url}/></NavLink>\n    render() { \n      //filling content based off what the filter is getting data from collection in state set when fetching data \n     let fillContent=this.state.collection.map((e,i)=>{\n       if(this.state.filter==='artistButton'){\n        return <li id={i}to='/MoreInfo'><ArtistItem id={i} click={this.artistClick}img={e.image[2]['#text']} name={e.name} followers={e.listeners} url={e.url}/></li>\n       }else if(this.state.filter==='albumButton'){\n         return <li id='albumId'onClick={((e) => this.artistClick(e))} ><AlbumItem img={e.image[2]['#text']} albumName={e.name} artist={e.artist} url={e.url}/></li>\n       }else if(this.state.filter==='songButton'){\n        return <li onClick={this.trackClick} to='/MoreInfo'><SongItem img={e.image[2]['#text']} songName={e.name} artistName={e.artist} plays={e.listeners} url={e.url}/></li>\n      }\n     })\n        return ( \n          <div>\n             <Header click={this.homeClick}/>\n            <Form btnClick={this.btnClick}click={this.click}/>\n            <ul id='listCon'>\n            {/* calling function */}\n            {fillContent}\n            </ul>\n          \n           {/* <Route exact path='/MoreInfo' render={()=>MoreInfo}/>\n           <Route exact path= '/' component={Home}/>\n                <Route exact path='/Home' component={Home}/> */}\n           </div>\n         );\n    }\n}\n \nexport default Home;"]},"metadata":{},"sourceType":"module"}