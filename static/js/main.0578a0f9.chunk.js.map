{"version":3,"sources":["Components/Button.js","Components/form.js","Components/albumItem.js","Components/songItem.js","Components/artistItem.js","Components/header.js","Page/Code.js","Page/Home.js","Page/MoreInfo.js","Components/AlbumDetail.js","Components/SongDetail.js","Components/ArtistDetail.js","Components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","id","type","onClick","style","styles","button","string","padding","form","onSubmit","click","filter","placeholder","class","btnClick","albumItem","src","img","to","albumName","artist","url","artistItem","songName","artistName","plays","name","followers","header","loadArtistDetail","mbid","a","fetch","res","json","data","loadAlbumDetail","loadSongDetail","Home","state","search","other","collection","topTracks","current","bigCollection","fetchTopTracks","console","log","document","querySelector","value","setState","fetchAlbum","fetchArtist","fetchSong","push","e","target","artistClick","homeClick","results","i","albummatches","album","this","trackmatches","track","artistmatches","tracks","fillContent","map","image","listeners","trackClick","Component","MoreInfo","AlbumDetail","albumId","useParams","useState","albumData","setAlbumData","setArtist","playCount","setPlayCount","published","setPublished","summary","setSummary","setTracks","albumImg","setAlbumImg","useEffect","then","d","playcount","wiki","fillTracks","parseFloat","toLocaleString","SongDetail","songId","songData","setSongData","setArtistName","albumTitle","setAlbumTitle","songBio","setSongBio","songImg","setSongImg","title","artistId","bio","setBio","similarArt","setSimilarArt","pic","setPic","stats","similar","fillSimilarArt","Routes","exact","path","component","ArtistDetail","App","className","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0578a0f9.chunk.js","sourcesContent":["import React from 'react';\n\nconst Button = props => {\n    return ( <button  id='searchBut'type='button'onClick={props.onClick} style={styles.button}>{props.string}</button> );\n}\nexport default Button;\nconst styles={\n    button:{\n        padding:'1rem',\n    }\n}","import React from 'react';\nimport Button from './Button';\nimport { FaSearch } from \"react-icons/fa\";\nimport './style.css';\nconst form = props => {\n    return (\n        <div>\n            <form onSubmit={props.click}>\n                <div id='fDiv'>\n                    {/* <h2>Search</h2> */}\n                    <h2>Filtering: {props.filter}</h2>\n                    <input type='text' placeholder='Search your favorite songs,albums, or artist'></input>\n                    <input id='hideThis' type='submit' />\n                    <Button string={<FaSearch />} onClick={props.click} />\n                </div>\n                <h2>Choose filter for search</h2>\n                <ul id='formButCon'>\n                    {/* passing onClick event to be placed in page */}\n                    <li><button class='formBut' onClick={props.btnClick} type='button' id='Artist'>Artist</button></li>\n                    <li><button class='formBut' onClick={props.btnClick} type='button' id='Song'>Song</button></li>\n                    <li><button class='formBut' onClick={props.btnClick} type='button' id='Album'>Album</button></li>\n                </ul>\n            </form>\n        </div>\n    );\n}\n\nexport default form;","import React from 'react';\nimport './style.css';\nimport {Link} from 'react-router-dom'\n\nconst albumItem = props => { \n    return (\n       <div>\n               <li><img src={props.img}/></li>\n               \n               <li class='item'>\n               <Link to={\"/album/\" + props.id}>\n                Album Name:{props.albumName}\n               </Link>\n               </li>\n               <li class='item'>Artist Name:{props.artist}</li>\n               \n               <li class='item'>\n                         More info:{props.url}\n               </li>\n          \n       </div>\n      );\n}\n\nexport default albumItem;","import React from 'react';\nimport './style.css';\nimport { Link } from 'react-router-dom';\nconst artistItem = props => {\n        return (\n                <div>\n                        <li><img src={props.img} /></li>\n                        <li>\n                                <Link to={\"/song/\" + props.id}>\n                                        Song Name:{props.songName}\n                                </Link>\n                        </li>\n                        <li class='item'>Artist Name:{props.artistName}</li>\n                        <li class='item'>Plays:{props.plays}</li>\n                        <li class='item'>More info:{props.url}</li>\n\n                </div>\n        );\n}\n\nexport default artistItem;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst artistItem = props => {\n        return (\n                <div>\n                        <li><img src={props.img} /></li>\n                        <li>\n                                <Link to={\"/artist/\" + props.id}>\n                                        Artist Name:{props.name}\n                                </Link>\n                        </li>\n                        <li class='item' id='artistItem'>Followers:{props.followers}</li>\n                        <li class='item' id='artistItem'>More Info:{props.url}</li>\n                </div>\n        );\n}\n\nexport default artistItem;","import React from 'react';\nimport { FaHome } from \"react-icons/fa\";\nimport './style.css';\nimport {NavLink} from 'react-router-dom';\n\nconst header = props => { \n    return (\n        <nav id=\"nav\">\n           <NavLink to='/'> <h1 id='logo'><FaHome onClick={props.click}/></h1></NavLink>\n        </nav>\n      );\n}\nexport default header;","//export to export functions\nimport { NavLink } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport AlbumItem from '../Components/albumItem';\n// export so it can be used in home \nexport const artistClickk = async (artist) => {\n    let collection = [];\n    console.log('from infoArtist');\n    ///2.0/?method=artist.getinfo&artist=Cher&api_key=77730a79e57e200de8fac0acd06a6bb6&format=json\n    const res = await fetch(`http://ws.audioscrobbler.com/2.0/?method=artist.getinfo&artist=${artist}&api_key=77730a79e57e200de8fac0acd06a6bb6&format=json`)\n    const data = await res.json();\n    //if data results exist\n    let r = await data;\n    console.log(r);\n}\nexport const loadArtistDetail = async (mbid) => {\n    // let albumArray = [];\n    const res = await fetch(`http://ws.audioscrobbler.com/2.0/?method=artist.getinfo&mbid=${mbid}&api_key=77730a79e57e200de8fac0acd06a6bb6&format=json`)\n    const data = await res.json();\n    return await data;\n}\nexport const loadAlbumDetail = async (mbid) => {\n    // let albumArray = [];\n    const res = await fetch(`http://ws.audioscrobbler.com/2.0/?method=album.getinfo&mbid=${mbid}&api_key=77730a79e57e200de8fac0acd06a6bb6&format=json`)\n    const data = await res.json();\n    return await data;\n}\n///2.0/?method=user.getinfo&user=rj&api_key=YOUR_API_KEY&format=json\nexport const loadSongDetail = async (mbid) => {\n    // let albumArray = [];\n    const res = await fetch(`http://ws.audioscrobbler.com/2.0/?method=track.getInfo&mbid=${mbid}&api_key=77730a79e57e200de8fac0acd06a6bb6&format=json`)\n    const data = await res.json();\n    return await data;\n}","import React, { Component } from 'react';\nimport Form from '../Components/form';\nimport AlbumItem from '../Components/albumItem';\nimport SongItem from '../Components/songItem';\nimport ArtistItem from '../Components/artistItem';\nimport TopCharts from '../Components/topChartsItem';\nimport Header from '../Components/header';\nimport { NavLink } from 'react-router-dom';\nimport '../Components/style.css';\nimport { artistClickk } from '../Page/Code';\n\n//project built using livefm api and spotify/youtube playback\n// Reacticons used and css Reset came from http://meyerweb.com/eric/tools/css/reset/ \nclass Home extends Component {\n  //state \n  state = { search: '', name: 'name', other: 'other', filter: '', collection: [], topTracks: [], current: [], bigCollection: [] }\n  //happens when all compents load in\n  componentDidMount() {\n    // this.fetchTopTracks();\n    console.log('test f');\n  }\n\n  //fetchs album based of search value\n  async fetchAlbum(value) {\n    let collection = [];\n    console.log(value);\n    const res = await fetch(`http://ws.audioscrobbler.com/2.0/?method=album.search&album=${value}&api_key=77730a79e57e200de8fac0acd06a6bb6&format=json`)\n    const data = await res.json()\n    //if data results exist\n    if (data.results) {\n      //this is gonna be a problem\n      for (let i = 0; i < 9; i++) {\n        collection.push(data.results.albummatches.album[i]);\n      }\n      //collection=data.results.albummatches.album;\n      console.log(collection);\n      this.setState({ collection });\n      console.log('exist');\n      console.log(data.results.albummatches.album[0]);\n      return collection;\n\n    }\n  }\n  //fetchs song based of search value\n  async fetchSong(value) {\n    let collection = [];\n    const res = await fetch(`http://ws.audioscrobbler.com/2.0/?method=track.search&track=${value}&api_key=77730a79e57e200de8fac0acd06a6bb6&format=json`)\n    const data = await res.json()\n    console.log(data);\n    if (data.results) {\n      for (let i = 0; i < 20; i++) {\n        collection.push(data.results.trackmatches.track[i]);\n      }\n      console.log(collection);\n      this.setState({ collection });\n      return collection;\n      console.log('exist');\n      console.log(data.results.trackmatches.track[0]);\n      let name = data.results.trackmatches.track[0].name;\n      let other = 'Listeners: ' + data.results.trackmatches.track[0].listeners;\n      this.setState({ name });\n      this.setState({ other });\n    }\n  }\n  //fetchs artist based on search value\n  async fetchArtist(value) {\n    let collection = [];\n    const res = await fetch(`http://ws.audioscrobbler.com/2.0/?method=artist.search&artist=${value}&api_key=77730a79e57e200de8fac0acd06a6bb6&format=json`)\n    const data = await res.json()\n    console.log(data);\n    if (data.results) {\n      for (let i = 0; i < 9; i++) {\n        collection.push(data.results.artistmatches.artist[i]);\n      }\n      console.log(collection);\n      this.setState({ collection });\n      return collection;\n      console.log('exist');\n      console.log(data.results.artistmatches.artist[0]);\n      let name = data.results.artistmatches.artist[0].name;\n      let other = 'Listeners: ' + data.results.artistmatches.artist[0].listeners;\n      this.setState({ name });\n      this.setState({ other });\n    }\n  }\n  //fetchs most popular artist\n  async fetchTopArtist() {\n    const res = await fetch(`http://ws.audioscrobbler.com/2.0/?method=chart.gettopartists&api_key=77730a79e57e200de8fac0acd06a6bb6&format=json`)\n    const data = await res.json()\n    console.log(data);\n  }\n  //fetchs most popular tracks\n  async fetchTopTracks() {\n    let topTracks = [];\n    const res = await fetch(`http://ws.audioscrobbler.com/2.0/?method=chart.gettoptracks&api_key=77730a79e57e200de8fac0acd06a6bb6&format=json`)\n    const data = await res.json()\n    // console.log(data);\n    for (let i = 0; i < 9; i++) {\n      topTracks.push(data.tracks.track[i]);\n    }\n    console.log('from top charts collection');\n    //  console.log(collection)\n    //  this.setState({topTracks});\n    // return collection;\n  }\n\n  //click function that will happen when form is submitted\n  //checks filter if fetching song artist or album the triggers fucntion to fetch data\n  click = () => {\n    this.fetchTopTracks();\n    console.log(this.state.filter);\n    let search = document.querySelector('input').value;\n    this.setState({ search });\n    if (this.state.filter === 'Album') {\n      this.fetchAlbum(search);\n    } else if (this.state.filter === 'Artist') {\n      this.fetchArtist(search);\n    } else if (this.state.filter === 'Song') {\n      this.fetchSong(search);\n    } else if (this.state.filter === '') {\n      let bigCollection = [];\n      bigCollection.push(this.fetchAlbum(search));\n      bigCollection.push(this.fetchArtist(search));\n      bigCollection.push(this.fetchSong(search));\n      this.setState({ bigCollection })\n    }\n  }\n  //happens when filter button is clicked will be set using id of button clicked\n  btnClick = (e) => {\n    let filter = e.target.id;\n    this.setState({ filter });\n    console.log(filter);\n  }\n  //I CANT GET VALUE INSIDE OF LI OR ANYTHING NEEDED FROM TARGETING A COMPENTNT\n  artistClick = (e) => {\n    console.log(e.target.id);\n\n    //artistClickk();\n  }\n\n  //  returns home and clears input fields\n  homeClick = () => {\n    let collection = [];\n    document.querySelector('input').value = '';\n    this.setState({ collection });\n  }\n  //<NavLink onClick={this.itemClick} to='/MoreInfo'><AlbumItem img={e.image[2]['#text']} albumName={e.name} artist={e.artist} url={e.url}/></NavLink>\n  render() {\n    //filling content based off what the filter is getting data from collection in state set when fetching data \n    let fillContent = this.state.collection.map((e, i) => {\n      console.log(e);\n      if (this.state.filter === 'Artist') {\n        return <li id={i} to='/MoreInfo'><ArtistItem id={i} id={e.mbid} click={this.artistClick} img={e.image[2]['#text']} name={e.name} followers={e.listeners} url={e.url} /></li>\n      } else if (this.state.filter === 'Album') {\n        return <li id='albumId' onClick={((e) => this.artistClick(e))} ><AlbumItem id={e.mbid} img={e.image[2]['#text']} albumName={e.name} artist={e.artist} url={e.url} /></li>\n      } else if (this.state.filter === 'Song') {\n        return <li onClick={this.trackClick} to='/MoreInfo'><SongItem img={e.image[2]['#text']} id={e.mbid} songName={e.name} artistName={e.artist} plays={e.listeners} url={e.url} /></li>\n      } else if (this.state.filter === '') {\n        console.log(e);\n        return <div><img src={e.image[2]['#text']} /><li>{e.name}</li> <li>{e.artist}</li></div>\n      }\n    })\n    return (\n      <div>\n        <Header click={this.homeClick} />\n        <Form btnClick={this.btnClick} filter={this.state.filter} click={this.click} />\n        <ul id='listCon'>\n          {/* calling function */}\n          {fillContent}\n        </ul>\n\n        {/* <Route exact path='/MoreInfo' render={()=>MoreInfo}/>\n           <Route exact path= '/' component={Home}/>\n                <Route exact path='/Home' component={Home}/> */}\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\n\n// once user clicks on searched item this route will go\nclass MoreInfo extends Component {\n    state = {  }\n    componentDidMount() {\n    \n      }\n    render() { \n        return ( <h1>More Info</h1> );\n    }\n}\n \nexport default MoreInfo;","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { loadAlbumDetail } from '../Page/Code'\nimport './style.css';\nimport Header from './header';\nconst AlbumDetail = (props) => {\n\n  let { albumId } = useParams();\n  //artist playcount published summary tracksonalbum\n  let [albumData, setAlbumData] = useState({})\n  let [artist, setArtist] = useState('')\n  let [playCount, setPlayCount] = useState('')\n  let [published, setPublished] = useState('')\n  let [summary, setSummary] = useState('')\n  let [tracks, setTracks] = useState([])\n  let [albumImg, setAlbumImg] = useState([])\n\n  useEffect(() => {\n    console.log(albumId);\n    loadAlbumDetail(albumId).then((d) => {\n      setAlbumData(d.album);\n      setArtist(d.album.artist);\n      setPlayCount(d.album.playcount);\n      setPublished(d.album.wiki.published);\n      setSummary(d.album.wiki.summary);\n      setTracks(d.album.tracks.track);\n      setAlbumImg(d.album.image[3]['#text']);\n      console.log(d.album);\n    })\n  }, [albumId])\n\n\n  let fillTracks = tracks.map((e, i) => {\n    return <li> {e.name}</li>;\n  })\n  return (\n    <div class='moreDetail'>\n      <Header />\n      {/* <h1>I am Album Detail.</h1>\n      <p>{albumId}</p> */}\n      <ul class='detailList'>\n        <div class='imgCon'>\n          <img src={albumImg} />\n          <li><h1>{albumData.name}</h1></li>\n        </div>\n        <li><h2>By {artist}</h2></li>\n        {/* toLocaleString will format long numbers to make them readable very cool */}\n        <li>Plays {parseFloat(playCount).toLocaleString('en')}</li>\n        <li>Release Date {published}</li>\n        <li class='bio'> {summary}</li>\n        <h2>Tracks</h2>\n        {fillTracks}\n      </ul>\n    </div>\n  )\n}\n\nexport default AlbumDetail","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { loadSongDetail } from '../Page/Code'\nimport './style.css';\nimport Header from './header'\n\nconst SongDetail = (props) => {\n\n    let { songId } = useParams();\n\n    let [songData, setSongData] = useState([])\n    let [artistName, setArtistName] = useState('');\n    let [albumTitle, setAlbumTitle] = useState('');\n    let [playCount, setPlayCount] = useState('');\n    let [songBio, setSongBio] = useState('');\n    let [songImg, setSongImg] = useState('');\n    useEffect(() => {\n        console.log(songId);\n        loadSongDetail(songId).then((d) => {\n            console.log(d.track);\n            setSongData(d.track);\n            setSongImg(d.track.album.image[2]['#text']);\n            setArtistName(d.track.artist.name);\n            setAlbumTitle(d.track.album.title);\n            setPlayCount(d.track.playcount);\n            setSongBio(d.track.wiki.summary);\n            console.log(d.track.artist.name);\n        }).then((e) => {\n            console.log(songData);\n        })\n\n    }, [songId])\n    return (\n        <div class='moreDetail'>\n            <Header />\n            {/* <h1>I am Album Detail.</h1>\n            <p>{songId}</p> */}\n            <ul class='detailList'>\n                <div class='imgCon'>\n                    <img src={songImg} />\n                    <li><h1>{songData.name}</h1></li>\n                </div>\n                <li><h2>By {artistName}</h2></li>\n                <li><h2>Album Title: {albumTitle}</h2></li>\n                <li>Play Count: {parseFloat(playCount).toLocaleString('en')}</li>\n                <li class='bio'>Summary: {songBio}</li>\n            </ul>\n        </div>\n    )\n}\n\nexport default SongDetail","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { loadArtistDetail } from '../Page/Code'\nimport './style.css';\nimport Header from './header';\nimport { utimesSync } from 'fs';\n\nconst SongDetail = (props) => {\n\n    let { artistId } = useParams();\n    //name bio.summary stats.playcount similar.artist[]\n\n    let [artistName, setArtistName] = useState('');\n    let [bio, setBio] = useState('');\n    let [playCount, setPlayCount] = useState('');\n    let [similarArt, setSimilarArt] = useState([]);\n    let [pic, setPic] = useState('');\n    useEffect(() => {\n        console.log(artistId);\n        loadArtistDetail(artistId).then((d) => {\n            console.log(d.artist);\n            setArtistName(d.artist.name);\n            setBio(d.artist.bio.summary);\n            setPlayCount(d.artist.stats.playcount);\n            setSimilarArt(d.artist.similar.artist);\n            setPic(d.artist.image[2]['#text']);\n            console.log(d.artist.image[2]['text'])\n        })\n    }, [artistId])\n\n    let fillSimilarArt = similarArt.map((e, i) => {\n        return <li>{e.name}</li>\n    })\n\n    return (\n        <div class='moreDetail'>\n            <Header />\n            {/* <h1>I am Album Detail.</h1>\n            <p>{artistId}</p> */}\n            <ul class='detailList'>\n                <div class='imgCon'>\n                    <img src={pic} />\n                    <li><h1>{artistName}</h1></li>\n                </div>\n                <li class='bio'>{bio}</li>\n                <li>Plays: {parseFloat(playCount).toLocaleString('en')}</li>\n                <h2>Similar Artist</h2>\n                {fillSimilarArt}\n            </ul>\n        </div>\n    )\n}\n\nexport default SongDetail","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from '../Page/Home';\nimport MoreInfo from '../Page/MoreInfo';\nimport AlbumDetail from './AlbumDetail';\nimport SongDetail from './SongDetail';\nimport ArtistDetail from './ArtistDetail';\nclass Routes extends Component {\n    render() {\n        return (<div>\n            <Switch>\n                {/* Will go straight to Home component */}\n                <Route exact path='/' component={Home} />\n                <Route exact path='/Home' component={Home} />\n                <Route exact path='/MoreInfo' component={MoreInfo} />\n                <Route exact path='/album/:albumId' component={AlbumDetail} />\n                <Route exact path='/song/:songId' component={SongDetail} />\n                <Route exact path='/artist/:artistId' component={ArtistDetail} />\n            </Switch>\n        </div>);\n    }\n}\nexport default Routes;","import React from 'react';\nimport './App.css';\nimport Home from './Page/Home';\nimport Routes from './Components/Routes';\nimport Header from './Components/header';\nimport {HashRouter as Router} from 'react-router-dom';\n\nfunction App() {\n  \n  return (\n    <Router>\n       \n    <div className=\"App\"> \n    <Routes/>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}